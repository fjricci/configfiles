set nocompatible " disable vi mode
set backspace=2 " backspace configuration
set number " line numbers on the left
set autoindent
set smartindent
set incsearch " move cursor while typing search pattern
set hlsearch
set smartcase
set showcmd " show commands while typing them
set laststatus=2 " always display the status bar
set statusline=[%02n]\ %f\ %(\[%M%R%H]%)\ %y\ %{''.&fileencoding}\ %=\ %4l,%02c%2V\ %P%*
set splitbelow " new split buffers are below the current one
set splitright " new vertical split buffer are on the right of the current one
set history=1000 " bigger history
set wildmenu " display a menu when hitting <TAB>
set wildmode=longest:full " display wildmenu even with commands
set scrolloff=3 " maintain context around the cursor when scrolling
set list listchars=tab:»·,trail:·,extends:…,nbsp:‗ " indicate spaces spaces
syntax on

set guifont=guifont=Monaco:h10
set guioptions-=m
set guioptions-=T
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R

set expandtab
set sw=2
set sts=2

colorscheme spacegray
set ic

" unbind arrow keys
for prefix in ['i', 'n', 'v']
  for key in ['<Up>', '<Down>', '<Left>', '<Right>']
    exe prefix . "noremap " . key . " <Nop>"
  endfor
endfor

" make sure color is enabled on ubuntu
if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

" unhighlight the search results when the keyboard is idle
autocmd CursorHold,CursorHoldI * nohls | redraw

" map <Esc> to jk
imap jk <Esc>

" map ; to :
nmap ; :

" remember last position when opening file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

function! s:CLangFormatting()
  " use C-like language indentation
  set cindent
  set cinoptions=:0,l1,g0,N-s,t0,(0,u0

  " tweak comment leaders to align properly
  set comments=sl:/*,mb:\ *,elx:\ */,://

  " tweak include path handling
  " TODO(compnerd) setup paths for windows
  set path=.,/usr/local/include,/usr/include,,

  " Use :GNUFormat to setup formatting behaviour amenable to GNU style
  command! GNUFormat :setlocal cinoptions=>2s,n-1s,{s,^-1s,:1s,=1s,g0,h1s,t0,+1s,(0,u0,w1,m1 noexpandtab shiftwidth=2 softtabstop=2 tabstop=8

  " Use :LLVMFormat to setup formatting behaviour amenable to LLVM style
  command! LLVMFormat :setlocal cinoptions=:0,g0,(0,Ws,l1 expandtab shiftwidth=2 softtabstop=2 tabstop=8
endfunction

let s:CLangFileTypes = [ 'c', 'cpp', 'objc', 'objcpp', 'c.doxygen',
                       \ 'cpp.doxygen', 'objc.doxygen', 'objcpp.doxygen' ]
let s:CPlusPlusFileTypes = [ 'cpp', 'objcpp', 'cpp.doxygen', 'objcpp.doxygen' ]

if has("autocmd")
    execute "autocmd FileType " . join(s:CLangFileTypes, ",") . " call s:CLangFormatting()"
endif
